name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev

env:
  ECS_SERVICE: springboot-service               # set this to your Amazon ECS service name
  ECS_CLUSTER: springboot-app                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: sprintboot # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: springboot-app          # set this to the name of the container in the

jobs:
  # Build and test app
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout Code
      uses: actions/checkout@v3

  # Deployment job to AWS ECS
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Configure AWS CLI with Access Key and Secret Key
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1  # Set your region

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true